<?xml version="1.0" encoding="utf-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/util
                        http://www.springframework.org/schema/util/spring-util.xsd">

    <!--<context:component-scan base-package="com.xfn.mf.cache" />-->

    <!--&lt;!&ndash;<bean id="redisDao" class="com.xfn.mf.cache.RedisDao">&ndash;&gt;-->
    <!--&lt;!&ndash;</bean>&ndash;&gt;-->

    <context:property-placeholder location="classpath*:redis.properties" ignore-unresolvable="true"/>

    <bean class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">
        <property name="maxInactiveIntervalInSeconds" value="7200"/>
    </bean>
    <bean class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.host}"/>
        <property name="password" value="${redis.pass}"/>
        <property name="port" value="${redis.port}"/>
        <property name="database" value="${redis.dbIndex}"/>
    </bean>

    <!--<bean class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">-->
        <!--<property name="hostName" value="127.0.0.1"/>-->
        <!--<property name="password" value="931001"/>-->
        <!--<property name="port" value="6379"/>-->
        <!--<property name="database" value="0"/>-->
    <!--</bean>-->

    <!-- 让Spring Session不再执行config命令 -->
    <util:constant static-field="org.springframework.session.data.redis.config.ConfigureRedisAction.NO_OP"/>


    <!--<bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">-->
    <!--<property name="hostName" value="${redis.host}"/>-->
    <!--<property name="port" value="${redis.port}"/>-->
    <!--<property name="password" value="${redis.pass}"/>-->
    <!--<property name="usePool" value="true"/>-->
    <!--<property name="timeout" value="${redis.timeout}" />-->
    <!--<property name="poolConfig" ref="poolConfig"/>-->
    <!--</bean>-->

    <!--<bean id="stringSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"/>-->

    <!--<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">-->
    <!--<property name="connectionFactory" ref="connectionFactory"/>-->
    <!--<property name="keySerializer" ref="stringSerializer"/>-->
    <!--<property name="enableTransactionSupport" value="true"/>-->
    <!--</bean>-->

    <!--&lt;!&ndash; 使用spring-session把http session放到redis里  &ndash;&gt;-->
    <!--<bean id="redisHttpSessionConfiguration"-->
    <!--class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">-->
    <!--<property name="maxInactiveIntervalInSeconds" value="1800" />-->
    <!--</bean>-->
</beans>